<<<<<<< Updated upstream
=======
/*
Desc:
This script is attached to Enemy Spawner Game object. The file has functions that spawns more enemies.
*/

>>>>>>> Stashed changes
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class TrojanBoss : MonoBehaviour
{
    public GameObject player;
<<<<<<< Updated upstream
    public bool dead;
    // Start is called before the first frame update
    [SerializeField]
    private GameObject[] enemies;
    [SerializeField] Level3Controller controller;

    void Start()
    {
      gameObject.tag = "Trojan";
      for(int i = 0; i < enemies.Length; i++)
        StartCoroutine(spawnEnemy(enemies[i]));
    }

    void Update(){
      controller.trojanDead = dead;
    }

=======
    //private variables
    [SerializeField]
    private GameObject[] enemies; //The array of enemies in the scene

    // Start is called before the first frame update
    void Start()
    {
      for (int i = 0; i < enemies.Length; i++)
        StartCoroutine(spawnEnemy(enemies[i]));
    }

>>>>>>> Stashed changes
    private IEnumerator spawnEnemy(GameObject enemy)
    {
        float interval = enemy.GetComponent<Enemy>().spawnInterval;
        enemy.SetActive(false); //an easy fix to hide original prefab
<<<<<<< Updated upstream
        yield return new WaitForSeconds(2); //wait for the number of seconds before spawning next enemy
        int r = Random.Range(-2,2);
        int r2 = Random.Range(-2,2);
        Vector3 spawnPos = new Vector3(gameObject.transform.position.x+r, gameObject.transform.position.y+r2, gameObject.transform.position.z);
=======
        yield return new WaitForSeconds(interval); //wait for the number of seconds before spawning next enemy
        Vector3 spawnPos = Random.onUnitSphere * 10;
>>>>>>> Stashed changes
        GameObject newEnemy = Instantiate(enemy, spawnPos, Quaternion.identity); //instantiate prefab
        newEnemy.SetActive(true); //make instantiated prefab back to active
        StartCoroutine(spawnEnemy(enemy));
    }
}

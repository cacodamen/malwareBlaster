/*Desc:

This file is a global file for any enemy that controls:
1. Enemy Movement towards player
2. Damage Player

 NOTE: To change damage values for a particular enemy:
1. Attach Enemy Script to Enemy Prefab
2. Create or Duplicate an existing Data Scriptable object in Assets/DataScriptableObject and attach to the Enemy Script
*/

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Enemy : MonoBehaviour
{
    //Public Variables
    public GameObject player; //Player Game Object

    //private
    [SerializeField]
    private EnemyData data; //Data Scriptable Object that takes in individual enemy data entered from inspector
    private int damage;
    private float speed;
    [HideInInspector]
    public float spawnInterval;

    // Start is called before the first frame update
    void Start()
    {
        SetEnemyValues();
    }

    // Update is called once per frame
    void Update()
    {
        Swarm();
    }

    // Get values from data scriptable object and attach to local variables of damage and speed
    private void SetEnemyValues()
    {
        GetComponent<Health>().SetHealth(data.hp, data.hp);
        damage = data.damage;
        speed = data.speed;
        spawnInterval = data.interval;
    }

    //Function to make the enemy follow player
    private void Swarm()
    {
        if(player != null)
        {
            transform.position = Vector2.MoveTowards(transform.position, player.transform.position, speed * Time.deltaTime);
        }
    }

    //Function to tell what happens once enemy and player collide
    private void OnTriggerEnter2D(Collider2D collider)
    {
        if (collider.CompareTag("Player"))
        {
            if(collider.GetComponent<Health>() != null)
            {
                collider.GetComponent<Health>().Damage(damage); //Player Damage: Invoke Damage function from Health Script attached to player
                this.GetComponent<Health>().Damage(100); //Enemy Damage: Give damage to enemy that once it touches the player, it dies (hence, damage = 10,000)
            }
        }
    }
}

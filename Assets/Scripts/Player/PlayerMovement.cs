using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using TMPro;

public class PlayerMovement : MonoBehaviour
{
    //Public Variables
    public Rigidbody2D rb; //rigidbody object

    //Private Variables
    private float speed; //player speed; gets from the Player.cs
    private Vector2 moveDirection;
    private SpriteRenderer sprite;
    private Animator anim;

    public TMP_Text levelText;

    public static int currentLevel = 1;

    [SerializeField] XPBar xpbar;

    public TMP_Text healthText;

    void Start()
    {
      //DontDestroyOnLoad(this.gameObject);
      speed = this.GetComponent<Player>().speed; //Gets speed from Player.cs
      this.sprite = this.GetComponent<SpriteRenderer>();
      anim = GetComponent<Animator>();
    }

    // Update is called once per frame (better for processing inputs)
    void Update()
    {
        healthText.text = "Health: " + this.GetComponent<Health>().health;
        levelText.text = "Level: " + currentLevel;
        ProcessInputs();
        if(xpbar.barFull){
          currentLevel += 1;
          xpbar.barFull = false;
        }
    }

    //fixed update gets called set amount of time which makes it consistent for movement
    void FixedUpdate()
    {
        Move();
    }

    //ProcessInputs gets the position and converts it to a 2D vector
    void ProcessInputs()
    {
        float moveX = Input.GetAxisRaw("Horizontal");
        float moveY = Input.GetAxisRaw("Vertical");

        if(moveX < 0)
          this.sprite.flipX = true;
        else if(moveX > 0)
          this.sprite.flipX = false;

        moveDirection = new Vector2(moveX, moveY).normalized; //converting our float values to a 2D vector which is capped to magnitude of 1
        anim.SetFloat("speed", Mathf.Abs(moveX)+Mathf.Abs(moveY));
    }

    //Move function calculates the velocity of movement
    void Move()
    {
        rb.velocity = new Vector2(moveDirection.x * (2 * speed), moveDirection.y * (2 * speed));
    }

    void OnCollisionEnter2D(Collision2D collision){
      if(collision.gameObject.tag == "XPItem"){
        float getItemXP = collision.gameObject.GetComponent<XPItem>().itemXP;
        Destroy(collision.gameObject);
        xpbar.itemXP = getItemXP;
        xpbar.itemPicked = true;
      }
    }
}

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class laserScript : MonoBehaviour
{
    
    public GameObject[] enemyRespawns;
    private Rigidbody2D rb;
    public float force;
    private GameObject player;
    private GameObject target;
    public int damage = 25;

    private float timer;
    public bool isEnemyTooFar = false;

    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        player = GameObject.FindGameObjectWithTag("Player");
        rb = GetComponent<Rigidbody2D>();

        enemyRespawns = GameObject.FindGameObjectsWithTag("Enemy"); //array of all enemies
        
        if(enemyRespawns.Length != 0){

            //code block to destroy any unused / laggy bullets
            timer += Time.deltaTime;
            if(timer > 1.25)
            {
                Destroy(gameObject);
            }


            target = closetEnemy(enemyRespawns, player); //finding closet enemy from the respawns
            Vector3 direction = target.transform.position - transform.position; //direction the bullet will go to

            Vector3 playerTargetGap = player.transform.position - target.transform.position; 
            float playerAndClosetEnemyDist = playerTargetGap.sqrMagnitude; //distance between the player and the closet enemy

            if(playerAndClosetEnemyDist <= 50f){ 
                isEnemyTooFar = false;
                rb.velocity = new Vector2(direction.x, direction.y).normalized * force;
                float rot = Mathf.Atan2(-direction.y, -direction.x) * Mathf.Rad2Deg; //rotate bullet
                transform.rotation = Quaternion.Euler(0, 0, rot + 150);
            }

            else{
                Destroy(gameObject);
            }
                
        }

    }

    public GameObject closetEnemy(GameObject[] enemyRespawns, GameObject player)
    {
        GameObject closetEnemySoFar = null;
        float closestDistanceSoFar = float.MaxValue;
        foreach (GameObject enemy in enemyRespawns)
        {
            Vector3 diff = enemy.transform.position - player.transform.position;
            float curDistance = Mathf.Abs(diff.sqrMagnitude);
            if (curDistance < closestDistanceSoFar )
            {
                closetEnemySoFar = enemy;
                closestDistanceSoFar = curDistance;
            }
        }
        return closetEnemySoFar;
    }

    //Damage Player
    //NOTE: Use this code block to add bullet blast animations
    private void OnTriggerEnter2D(Collider2D collider)
    {
        if(collider.gameObject.tag == "Enemy")
        {
            Destroy(gameObject);
            Health health = collider.GetComponent<Health>();
            health.Damage(damage);
        }
    }
}

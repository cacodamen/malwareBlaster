using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using TMPro;

public class DialogueController : MonoBehaviour
{
  [Header("Dialogue")]
  [SerializeField] string[] text;
  [SerializeField] TMP_Text textBox;
  //[SerializeField] AudioSource speech;

  [Header("Dialogue Speed")]
  [SerializeField] float startWait = 1.5f;
  [SerializeField] float interval;
  [SerializeField] float periodPauseTime = 0.75f;
  //[SerializeField] float turnOff;

  [Header("Dialogue Controller")]
  [SerializeField] GameObject[] UI_Choices;
  [SerializeField] GameObject StageController;
  public bool completed = false;

  private IEnumerator textCR;
  private bool doClear = false;

  void Start(){
    textBox.text = string.Empty;
    this.gameObject.SetActive(true);
    if (!completed) {
      textCR = TextBoxUpdate();
      StartCoroutine(textCR);
    }
  }

  IEnumerator TextBoxUpdate(){
    yield return new WaitForSeconds(startWait);
    int line = 0;
    while(line < text.Length){
      char[] chars = text[line].ToCharArray();
      int index = 0;
      while(index < chars.Length){
        if(chars[index] == '+')
        {
          doClear = true;
          break;
        }
        textBox.text += chars[index];
        //speech.Play();
        if (chars[index] == '.' || chars[index] == '?' || chars[index] == '!') {
          yield return new WaitForSeconds(periodPauseTime);
        } else {
          yield return new WaitForSeconds(interval);
        }
        index++;
      }
      line++;
      textBox.text = string.Empty;
      if(doClear)
        StageController.GetComponent<startGame>().StartNewGame();
    }
  }

  private void ActivateChoices()
  {
    foreach (GameObject button in UI_Choices)
    {
      button.SetActive(true);
    }
  }

  public void StartTextBoxing()
  {
    this.gameObject.SetActive(true);
    if (!completed) {
      textCR = TextBoxUpdate();
      StartCoroutine(textCR);
    }
  }

  public void StopTextBoxing()
  {
    textBox.text = string.Empty;
  }
}
